// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: agglayer/interop/types/v1/aggchain.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Aggchaindata is the data sent by the aggchain.
type AggchainData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The data of the aggchain.
	//
	// Types that are valid to be assigned to Data:
	//
	//	*AggchainData_Signature
	//	*AggchainData_Generic
	Data          isAggchainData_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggchainData) Reset() {
	*x = AggchainData{}
	mi := &file_agglayer_interop_types_v1_aggchain_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggchainData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggchainData) ProtoMessage() {}

func (x *AggchainData) ProtoReflect() protoreflect.Message {
	mi := &file_agglayer_interop_types_v1_aggchain_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggchainData.ProtoReflect.Descriptor instead.
func (*AggchainData) Descriptor() ([]byte, []int) {
	return file_agglayer_interop_types_v1_aggchain_proto_rawDescGZIP(), []int{0}
}

func (x *AggchainData) GetData() isAggchainData_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AggchainData) GetSignature() *FixedBytes65 {
	if x != nil {
		if x, ok := x.Data.(*AggchainData_Signature); ok {
			return x.Signature
		}
	}
	return nil
}

func (x *AggchainData) GetGeneric() *AggchainProof {
	if x != nil {
		if x, ok := x.Data.(*AggchainData_Generic); ok {
			return x.Generic
		}
	}
	return nil
}

type isAggchainData_Data interface {
	isAggchainData_Data()
}

type AggchainData_Signature struct {
	// Signature committed to the bridge exits and imported bridge exits.
	Signature *FixedBytes65 `protobuf:"bytes,1,opt,name=signature,proto3,oneof"`
}

type AggchainData_Generic struct {
	// Generic Aggchain proof.
	Generic *AggchainProof `protobuf:"bytes,2,opt,name=generic,proto3,oneof"`
}

func (*AggchainData_Signature) isAggchainData_Data() {}

func (*AggchainData_Generic) isAggchainData_Data() {}

// Aggchain proof.
type AggchainProof struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Aggchain params.
	AggchainParams *FixedBytes32 `protobuf:"bytes,1,opt,name=aggchain_params,json=aggchainParams,proto3" json:"aggchain_params,omitempty"`
	// The signature linked to the aggchain-proof.
	// This signature is used to verify the authenticity of the aggchain-proof.
	// It represents a commitment to:
	// - `NewLocalExitRoot`
	// - `ClaimHash` (which is the hash of all the claims's global index + bridge exit hash)
	// - `Height` of the certificate associated to this aggchain-proof
	// - `AggchainParams` of the aggchain-proof
	Signature *FixedBytes65 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// Aggchain proof context to share non-sensitive data.
	Context map[string][]byte `protobuf:"bytes,3,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The proof for the aggchain.
	//
	// Types that are valid to be assigned to Proof:
	//
	//	*AggchainProof_Sp1Stark
	Proof         isAggchainProof_Proof `protobuf_oneof:"proof"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggchainProof) Reset() {
	*x = AggchainProof{}
	mi := &file_agglayer_interop_types_v1_aggchain_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggchainProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggchainProof) ProtoMessage() {}

func (x *AggchainProof) ProtoReflect() protoreflect.Message {
	mi := &file_agglayer_interop_types_v1_aggchain_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggchainProof.ProtoReflect.Descriptor instead.
func (*AggchainProof) Descriptor() ([]byte, []int) {
	return file_agglayer_interop_types_v1_aggchain_proto_rawDescGZIP(), []int{1}
}

func (x *AggchainProof) GetAggchainParams() *FixedBytes32 {
	if x != nil {
		return x.AggchainParams
	}
	return nil
}

func (x *AggchainProof) GetSignature() *FixedBytes65 {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *AggchainProof) GetContext() map[string][]byte {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *AggchainProof) GetProof() isAggchainProof_Proof {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *AggchainProof) GetSp1Stark() *SP1StarkProof {
	if x != nil {
		if x, ok := x.Proof.(*AggchainProof_Sp1Stark); ok {
			return x.Sp1Stark
		}
	}
	return nil
}

type isAggchainProof_Proof interface {
	isAggchainProof_Proof()
}

type AggchainProof_Sp1Stark struct {
	// SP1 stark proof.
	Sp1Stark *SP1StarkProof `protobuf:"bytes,4,opt,name=sp1_stark,json=sp1Stark,proto3,oneof"`
}

func (*AggchainProof_Sp1Stark) isAggchainProof_Proof() {}

// SP1 stark proof.
type SP1StarkProof struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SP1 Version
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// SP1 stark proof.
	Proof []byte `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"`
	// SP1 stark proof verification key.
	Vkey          []byte `protobuf:"bytes,3,opt,name=vkey,proto3" json:"vkey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SP1StarkProof) Reset() {
	*x = SP1StarkProof{}
	mi := &file_agglayer_interop_types_v1_aggchain_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SP1StarkProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SP1StarkProof) ProtoMessage() {}

func (x *SP1StarkProof) ProtoReflect() protoreflect.Message {
	mi := &file_agglayer_interop_types_v1_aggchain_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SP1StarkProof.ProtoReflect.Descriptor instead.
func (*SP1StarkProof) Descriptor() ([]byte, []int) {
	return file_agglayer_interop_types_v1_aggchain_proto_rawDescGZIP(), []int{2}
}

func (x *SP1StarkProof) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SP1StarkProof) GetProof() []byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *SP1StarkProof) GetVkey() []byte {
	if x != nil {
		return x.Vkey
	}
	return nil
}

var File_agglayer_interop_types_v1_aggchain_proto protoreflect.FileDescriptor

const file_agglayer_interop_types_v1_aggchain_proto_rawDesc = "" +
	"\n" +
	"(agglayer/interop/types/v1/aggchain.proto\x12\x19agglayer.interop.types.v1\x1a%agglayer/interop/types/v1/bytes.proto\"\xa5\x01\n" +
	"\fAggchainData\x12G\n" +
	"\tsignature\x18\x01 \x01(\v2'.agglayer.interop.types.v1.FixedBytes65H\x00R\tsignature\x12D\n" +
	"\ageneric\x18\x02 \x01(\v2(.agglayer.interop.types.v1.AggchainProofH\x00R\agenericB\x06\n" +
	"\x04data\"\x87\x03\n" +
	"\rAggchainProof\x12P\n" +
	"\x0faggchain_params\x18\x01 \x01(\v2'.agglayer.interop.types.v1.FixedBytes32R\x0eaggchainParams\x12E\n" +
	"\tsignature\x18\x02 \x01(\v2'.agglayer.interop.types.v1.FixedBytes65R\tsignature\x12O\n" +
	"\acontext\x18\x03 \x03(\v25.agglayer.interop.types.v1.AggchainProof.ContextEntryR\acontext\x12G\n" +
	"\tsp1_stark\x18\x04 \x01(\v2(.agglayer.interop.types.v1.SP1StarkProofH\x00R\bsp1Stark\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01B\a\n" +
	"\x05proof\"S\n" +
	"\rSP1StarkProof\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x14\n" +
	"\x05proof\x18\x02 \x01(\fR\x05proof\x12\x12\n" +
	"\x04vkey\x18\x03 \x01(\fR\x04vkeyb\x06proto3"

var (
	file_agglayer_interop_types_v1_aggchain_proto_rawDescOnce sync.Once
	file_agglayer_interop_types_v1_aggchain_proto_rawDescData []byte
)

func file_agglayer_interop_types_v1_aggchain_proto_rawDescGZIP() []byte {
	file_agglayer_interop_types_v1_aggchain_proto_rawDescOnce.Do(func() {
		file_agglayer_interop_types_v1_aggchain_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agglayer_interop_types_v1_aggchain_proto_rawDesc), len(file_agglayer_interop_types_v1_aggchain_proto_rawDesc)))
	})
	return file_agglayer_interop_types_v1_aggchain_proto_rawDescData
}

var file_agglayer_interop_types_v1_aggchain_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_agglayer_interop_types_v1_aggchain_proto_goTypes = []any{
	(*AggchainData)(nil),  // 0: agglayer.interop.types.v1.AggchainData
	(*AggchainProof)(nil), // 1: agglayer.interop.types.v1.AggchainProof
	(*SP1StarkProof)(nil), // 2: agglayer.interop.types.v1.SP1StarkProof
	nil,                   // 3: agglayer.interop.types.v1.AggchainProof.ContextEntry
	(*FixedBytes65)(nil),  // 4: agglayer.interop.types.v1.FixedBytes65
	(*FixedBytes32)(nil),  // 5: agglayer.interop.types.v1.FixedBytes32
}
var file_agglayer_interop_types_v1_aggchain_proto_depIdxs = []int32{
	4, // 0: agglayer.interop.types.v1.AggchainData.signature:type_name -> agglayer.interop.types.v1.FixedBytes65
	1, // 1: agglayer.interop.types.v1.AggchainData.generic:type_name -> agglayer.interop.types.v1.AggchainProof
	5, // 2: agglayer.interop.types.v1.AggchainProof.aggchain_params:type_name -> agglayer.interop.types.v1.FixedBytes32
	4, // 3: agglayer.interop.types.v1.AggchainProof.signature:type_name -> agglayer.interop.types.v1.FixedBytes65
	3, // 4: agglayer.interop.types.v1.AggchainProof.context:type_name -> agglayer.interop.types.v1.AggchainProof.ContextEntry
	2, // 5: agglayer.interop.types.v1.AggchainProof.sp1_stark:type_name -> agglayer.interop.types.v1.SP1StarkProof
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_agglayer_interop_types_v1_aggchain_proto_init() }
func file_agglayer_interop_types_v1_aggchain_proto_init() {
	if File_agglayer_interop_types_v1_aggchain_proto != nil {
		return
	}
	file_agglayer_interop_types_v1_bytes_proto_init()
	file_agglayer_interop_types_v1_aggchain_proto_msgTypes[0].OneofWrappers = []any{
		(*AggchainData_Signature)(nil),
		(*AggchainData_Generic)(nil),
	}
	file_agglayer_interop_types_v1_aggchain_proto_msgTypes[1].OneofWrappers = []any{
		(*AggchainProof_Sp1Stark)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agglayer_interop_types_v1_aggchain_proto_rawDesc), len(file_agglayer_interop_types_v1_aggchain_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_agglayer_interop_types_v1_aggchain_proto_goTypes,
		DependencyIndexes: file_agglayer_interop_types_v1_aggchain_proto_depIdxs,
		MessageInfos:      file_agglayer_interop_types_v1_aggchain_proto_msgTypes,
	}.Build()
	File_agglayer_interop_types_v1_aggchain_proto = out.File
	file_agglayer_interop_types_v1_aggchain_proto_goTypes = nil
	file_agglayer_interop_types_v1_aggchain_proto_depIdxs = nil
}
