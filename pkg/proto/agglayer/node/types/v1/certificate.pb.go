// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: agglayer/node/types/v1/certificate.proto

package v1

import (
	v1 "github.com/gateway-fm/agg-certificate-proxy/pkg/proto/agglayer/interop/types/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Certificate type.
type Certificate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// NetworkID of the origin network.
	NetworkId uint32 `protobuf:"varint,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// Simple increment to count the Certificate per network.
	Height uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// Previous local exit root.
	PrevLocalExitRoot *v1.FixedBytes32 `protobuf:"bytes,3,opt,name=prev_local_exit_root,json=prevLocalExitRoot,proto3" json:"prev_local_exit_root,omitempty"`
	// New local exit root.
	NewLocalExitRoot *v1.FixedBytes32 `protobuf:"bytes,4,opt,name=new_local_exit_root,json=newLocalExitRoot,proto3" json:"new_local_exit_root,omitempty"`
	// List of bridge exits included in this state transition.
	BridgeExits []*v1.BridgeExit `protobuf:"bytes,5,rep,name=bridge_exits,json=bridgeExits,proto3" json:"bridge_exits,omitempty"`
	// List of imported bridge exits included in this state transition.
	ImportedBridgeExits []*v1.ImportedBridgeExit `protobuf:"bytes,6,rep,name=imported_bridge_exits,json=importedBridgeExits,proto3" json:"imported_bridge_exits,omitempty"`
	// Fixed size field of arbitrary data for the chain needs.
	Metadata *v1.FixedBytes32 `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Aggchain data.
	AggchainData *v1.AggchainData `protobuf:"bytes,8,opt,name=aggchain_data,json=aggchainData,proto3" json:"aggchain_data,omitempty"`
	// custom chain data.
	CustomChainData []byte `protobuf:"bytes,9,opt,name=custom_chain_data,json=customChainData,proto3" json:"custom_chain_data,omitempty"`
	// Defines which L1 info tree leaf count is used for this certificate.
	// The L1 info tree leaf count is the L1 info tree leaf index + 1.
	L1InfoTreeLeafCount *uint32 `protobuf:"varint,10,opt,name=l1_info_tree_leaf_count,json=l1InfoTreeLeafCount,proto3,oneof" json:"l1_info_tree_leaf_count,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Certificate) Reset() {
	*x = Certificate{}
	mi := &file_agglayer_node_types_v1_certificate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Certificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Certificate) ProtoMessage() {}

func (x *Certificate) ProtoReflect() protoreflect.Message {
	mi := &file_agglayer_node_types_v1_certificate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Certificate.ProtoReflect.Descriptor instead.
func (*Certificate) Descriptor() ([]byte, []int) {
	return file_agglayer_node_types_v1_certificate_proto_rawDescGZIP(), []int{0}
}

func (x *Certificate) GetNetworkId() uint32 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

func (x *Certificate) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Certificate) GetPrevLocalExitRoot() *v1.FixedBytes32 {
	if x != nil {
		return x.PrevLocalExitRoot
	}
	return nil
}

func (x *Certificate) GetNewLocalExitRoot() *v1.FixedBytes32 {
	if x != nil {
		return x.NewLocalExitRoot
	}
	return nil
}

func (x *Certificate) GetBridgeExits() []*v1.BridgeExit {
	if x != nil {
		return x.BridgeExits
	}
	return nil
}

func (x *Certificate) GetImportedBridgeExits() []*v1.ImportedBridgeExit {
	if x != nil {
		return x.ImportedBridgeExits
	}
	return nil
}

func (x *Certificate) GetMetadata() *v1.FixedBytes32 {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Certificate) GetAggchainData() *v1.AggchainData {
	if x != nil {
		return x.AggchainData
	}
	return nil
}

func (x *Certificate) GetCustomChainData() []byte {
	if x != nil {
		return x.CustomChainData
	}
	return nil
}

func (x *Certificate) GetL1InfoTreeLeafCount() uint32 {
	if x != nil && x.L1InfoTreeLeafCount != nil {
		return *x.L1InfoTreeLeafCount
	}
	return 0
}

var File_agglayer_node_types_v1_certificate_proto protoreflect.FileDescriptor

const file_agglayer_node_types_v1_certificate_proto_rawDesc = "" +
	"\n" +
	"(agglayer/node/types/v1/certificate.proto\x12\x16agglayer.node.types.v1\x1a(agglayer/interop/types/v1/aggchain.proto\x1a+agglayer/interop/types/v1/bridge_exit.proto\x1a%agglayer/interop/types/v1/bytes.proto\x1a4agglayer/interop/types/v1/imported_bridge_exit.proto\"\xb9\x05\n" +
	"\vCertificate\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\rR\tnetworkId\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x04R\x06height\x12X\n" +
	"\x14prev_local_exit_root\x18\x03 \x01(\v2'.agglayer.interop.types.v1.FixedBytes32R\x11prevLocalExitRoot\x12V\n" +
	"\x13new_local_exit_root\x18\x04 \x01(\v2'.agglayer.interop.types.v1.FixedBytes32R\x10newLocalExitRoot\x12H\n" +
	"\fbridge_exits\x18\x05 \x03(\v2%.agglayer.interop.types.v1.BridgeExitR\vbridgeExits\x12a\n" +
	"\x15imported_bridge_exits\x18\x06 \x03(\v2-.agglayer.interop.types.v1.ImportedBridgeExitR\x13importedBridgeExits\x12C\n" +
	"\bmetadata\x18\a \x01(\v2'.agglayer.interop.types.v1.FixedBytes32R\bmetadata\x12L\n" +
	"\raggchain_data\x18\b \x01(\v2'.agglayer.interop.types.v1.AggchainDataR\faggchainData\x12*\n" +
	"\x11custom_chain_data\x18\t \x01(\fR\x0fcustomChainData\x129\n" +
	"\x17l1_info_tree_leaf_count\x18\n" +
	" \x01(\rH\x00R\x13l1InfoTreeLeafCount\x88\x01\x01B\x1a\n" +
	"\x18_l1_info_tree_leaf_countb\x06proto3"

var (
	file_agglayer_node_types_v1_certificate_proto_rawDescOnce sync.Once
	file_agglayer_node_types_v1_certificate_proto_rawDescData []byte
)

func file_agglayer_node_types_v1_certificate_proto_rawDescGZIP() []byte {
	file_agglayer_node_types_v1_certificate_proto_rawDescOnce.Do(func() {
		file_agglayer_node_types_v1_certificate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agglayer_node_types_v1_certificate_proto_rawDesc), len(file_agglayer_node_types_v1_certificate_proto_rawDesc)))
	})
	return file_agglayer_node_types_v1_certificate_proto_rawDescData
}

var file_agglayer_node_types_v1_certificate_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_agglayer_node_types_v1_certificate_proto_goTypes = []any{
	(*Certificate)(nil),           // 0: agglayer.node.types.v1.Certificate
	(*v1.FixedBytes32)(nil),       // 1: agglayer.interop.types.v1.FixedBytes32
	(*v1.BridgeExit)(nil),         // 2: agglayer.interop.types.v1.BridgeExit
	(*v1.ImportedBridgeExit)(nil), // 3: agglayer.interop.types.v1.ImportedBridgeExit
	(*v1.AggchainData)(nil),       // 4: agglayer.interop.types.v1.AggchainData
}
var file_agglayer_node_types_v1_certificate_proto_depIdxs = []int32{
	1, // 0: agglayer.node.types.v1.Certificate.prev_local_exit_root:type_name -> agglayer.interop.types.v1.FixedBytes32
	1, // 1: agglayer.node.types.v1.Certificate.new_local_exit_root:type_name -> agglayer.interop.types.v1.FixedBytes32
	2, // 2: agglayer.node.types.v1.Certificate.bridge_exits:type_name -> agglayer.interop.types.v1.BridgeExit
	3, // 3: agglayer.node.types.v1.Certificate.imported_bridge_exits:type_name -> agglayer.interop.types.v1.ImportedBridgeExit
	1, // 4: agglayer.node.types.v1.Certificate.metadata:type_name -> agglayer.interop.types.v1.FixedBytes32
	4, // 5: agglayer.node.types.v1.Certificate.aggchain_data:type_name -> agglayer.interop.types.v1.AggchainData
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_agglayer_node_types_v1_certificate_proto_init() }
func file_agglayer_node_types_v1_certificate_proto_init() {
	if File_agglayer_node_types_v1_certificate_proto != nil {
		return
	}
	file_agglayer_node_types_v1_certificate_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agglayer_node_types_v1_certificate_proto_rawDesc), len(file_agglayer_node_types_v1_certificate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_agglayer_node_types_v1_certificate_proto_goTypes,
		DependencyIndexes: file_agglayer_node_types_v1_certificate_proto_depIdxs,
		MessageInfos:      file_agglayer_node_types_v1_certificate_proto_msgTypes,
	}.Build()
	File_agglayer_node_types_v1_certificate_proto = out.File
	file_agglayer_node_types_v1_certificate_proto_goTypes = nil
	file_agglayer_node_types_v1_certificate_proto_depIdxs = nil
}
