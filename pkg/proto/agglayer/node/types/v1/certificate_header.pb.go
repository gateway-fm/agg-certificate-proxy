// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: agglayer/node/types/v1/certificate_header.proto

package v1

import (
	v1 "github.com/gateway-fm/agg-certificate-proxy/pkg/proto/agglayer/interop/types/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Certificate status type.
type CertificateStatus int32

const (
	// Unspecified certificate status.
	CertificateStatus_CERTIFICATE_STATUS_UNSPECIFIED CertificateStatus = 0
	// Certificate is pending.
	CertificateStatus_CERTIFICATE_STATUS_PENDING CertificateStatus = 1
	// Certificate is proven.
	CertificateStatus_CERTIFICATE_STATUS_PROVEN CertificateStatus = 2
	// Certificate is candidate.
	CertificateStatus_CERTIFICATE_STATUS_CANDIDATE CertificateStatus = 3
	// Certificate is in error.
	CertificateStatus_CERTIFICATE_STATUS_IN_ERROR CertificateStatus = 4
	// Certificate is settled.
	CertificateStatus_CERTIFICATE_STATUS_SETTLED CertificateStatus = 5
)

// Enum value maps for CertificateStatus.
var (
	CertificateStatus_name = map[int32]string{
		0: "CERTIFICATE_STATUS_UNSPECIFIED",
		1: "CERTIFICATE_STATUS_PENDING",
		2: "CERTIFICATE_STATUS_PROVEN",
		3: "CERTIFICATE_STATUS_CANDIDATE",
		4: "CERTIFICATE_STATUS_IN_ERROR",
		5: "CERTIFICATE_STATUS_SETTLED",
	}
	CertificateStatus_value = map[string]int32{
		"CERTIFICATE_STATUS_UNSPECIFIED": 0,
		"CERTIFICATE_STATUS_PENDING":     1,
		"CERTIFICATE_STATUS_PROVEN":      2,
		"CERTIFICATE_STATUS_CANDIDATE":   3,
		"CERTIFICATE_STATUS_IN_ERROR":    4,
		"CERTIFICATE_STATUS_SETTLED":     5,
	}
)

func (x CertificateStatus) Enum() *CertificateStatus {
	p := new(CertificateStatus)
	*p = x
	return p
}

func (x CertificateStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CertificateStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_agglayer_node_types_v1_certificate_header_proto_enumTypes[0].Descriptor()
}

func (CertificateStatus) Type() protoreflect.EnumType {
	return &file_agglayer_node_types_v1_certificate_header_proto_enumTypes[0]
}

func (x CertificateStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CertificateStatus.Descriptor instead.
func (CertificateStatus) EnumDescriptor() ([]byte, []int) {
	return file_agglayer_node_types_v1_certificate_header_proto_rawDescGZIP(), []int{0}
}

// Certificate header type.
type CertificateHeader struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// NetworkID for the certificate.
	NetworkId uint32 `protobuf:"varint,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// Height of the certificate.
	Height uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// Epoch number where the certificate was settled.
	EpochNumber *uint64 `protobuf:"varint,3,opt,name=epoch_number,json=epochNumber,proto3,oneof" json:"epoch_number,omitempty"`
	// Certificate index in the epoch.
	CertificateIndex *uint64 `protobuf:"varint,4,opt,name=certificate_index,json=certificateIndex,proto3,oneof" json:"certificate_index,omitempty"`
	// Certificate ID.
	CertificateId *CertificateId `protobuf:"bytes,5,opt,name=certificate_id,json=certificateId,proto3" json:"certificate_id,omitempty"`
	// Previous local exit root.
	PrevLocalExitRoot *v1.FixedBytes32 `protobuf:"bytes,6,opt,name=prev_local_exit_root,json=prevLocalExitRoot,proto3" json:"prev_local_exit_root,omitempty"`
	// New local exit root.
	NewLocalExitRoot *v1.FixedBytes32 `protobuf:"bytes,7,opt,name=new_local_exit_root,json=newLocalExitRoot,proto3" json:"new_local_exit_root,omitempty"`
	// Fixed size field of arbitrary data for the chain needs.
	Metadata *v1.FixedBytes32 `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Certificate status.
	Status CertificateStatus `protobuf:"varint,9,opt,name=status,proto3,enum=agglayer.node.types.v1.CertificateStatus" json:"status,omitempty"`
	// Certificate status error details. Present iff `status` is `CERTIFICATE_STATUS_IN_ERROR`.
	Error *CertificateStatusError `protobuf:"bytes,10,opt,name=error,proto3" json:"error,omitempty"`
	// Settlement transaction hash.
	SettlementTxHash *v1.FixedBytes32 `protobuf:"bytes,11,opt,name=settlement_tx_hash,json=settlementTxHash,proto3" json:"settlement_tx_hash,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CertificateHeader) Reset() {
	*x = CertificateHeader{}
	mi := &file_agglayer_node_types_v1_certificate_header_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertificateHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateHeader) ProtoMessage() {}

func (x *CertificateHeader) ProtoReflect() protoreflect.Message {
	mi := &file_agglayer_node_types_v1_certificate_header_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateHeader.ProtoReflect.Descriptor instead.
func (*CertificateHeader) Descriptor() ([]byte, []int) {
	return file_agglayer_node_types_v1_certificate_header_proto_rawDescGZIP(), []int{0}
}

func (x *CertificateHeader) GetNetworkId() uint32 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

func (x *CertificateHeader) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CertificateHeader) GetEpochNumber() uint64 {
	if x != nil && x.EpochNumber != nil {
		return *x.EpochNumber
	}
	return 0
}

func (x *CertificateHeader) GetCertificateIndex() uint64 {
	if x != nil && x.CertificateIndex != nil {
		return *x.CertificateIndex
	}
	return 0
}

func (x *CertificateHeader) GetCertificateId() *CertificateId {
	if x != nil {
		return x.CertificateId
	}
	return nil
}

func (x *CertificateHeader) GetPrevLocalExitRoot() *v1.FixedBytes32 {
	if x != nil {
		return x.PrevLocalExitRoot
	}
	return nil
}

func (x *CertificateHeader) GetNewLocalExitRoot() *v1.FixedBytes32 {
	if x != nil {
		return x.NewLocalExitRoot
	}
	return nil
}

func (x *CertificateHeader) GetMetadata() *v1.FixedBytes32 {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CertificateHeader) GetStatus() CertificateStatus {
	if x != nil {
		return x.Status
	}
	return CertificateStatus_CERTIFICATE_STATUS_UNSPECIFIED
}

func (x *CertificateHeader) GetError() *CertificateStatusError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CertificateHeader) GetSettlementTxHash() *v1.FixedBytes32 {
	if x != nil {
		return x.SettlementTxHash
	}
	return nil
}

// Certificate status error type.
type CertificateStatusError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Error message.
	Message       []byte `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CertificateStatusError) Reset() {
	*x = CertificateStatusError{}
	mi := &file_agglayer_node_types_v1_certificate_header_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertificateStatusError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateStatusError) ProtoMessage() {}

func (x *CertificateStatusError) ProtoReflect() protoreflect.Message {
	mi := &file_agglayer_node_types_v1_certificate_header_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateStatusError.ProtoReflect.Descriptor instead.
func (*CertificateStatusError) Descriptor() ([]byte, []int) {
	return file_agglayer_node_types_v1_certificate_header_proto_rawDescGZIP(), []int{1}
}

func (x *CertificateStatusError) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

var File_agglayer_node_types_v1_certificate_header_proto protoreflect.FileDescriptor

const file_agglayer_node_types_v1_certificate_header_proto_rawDesc = "" +
	"\n" +
	"/agglayer/node/types/v1/certificate_header.proto\x12\x16agglayer.node.types.v1\x1a%agglayer/interop/types/v1/bytes.proto\x1a+agglayer/node/types/v1/certificate_id.proto\"\xf0\x05\n" +
	"\x11CertificateHeader\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\rR\tnetworkId\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x04R\x06height\x12&\n" +
	"\fepoch_number\x18\x03 \x01(\x04H\x00R\vepochNumber\x88\x01\x01\x120\n" +
	"\x11certificate_index\x18\x04 \x01(\x04H\x01R\x10certificateIndex\x88\x01\x01\x12L\n" +
	"\x0ecertificate_id\x18\x05 \x01(\v2%.agglayer.node.types.v1.CertificateIdR\rcertificateId\x12X\n" +
	"\x14prev_local_exit_root\x18\x06 \x01(\v2'.agglayer.interop.types.v1.FixedBytes32R\x11prevLocalExitRoot\x12V\n" +
	"\x13new_local_exit_root\x18\a \x01(\v2'.agglayer.interop.types.v1.FixedBytes32R\x10newLocalExitRoot\x12C\n" +
	"\bmetadata\x18\b \x01(\v2'.agglayer.interop.types.v1.FixedBytes32R\bmetadata\x12A\n" +
	"\x06status\x18\t \x01(\x0e2).agglayer.node.types.v1.CertificateStatusR\x06status\x12D\n" +
	"\x05error\x18\n" +
	" \x01(\v2..agglayer.node.types.v1.CertificateStatusErrorR\x05error\x12U\n" +
	"\x12settlement_tx_hash\x18\v \x01(\v2'.agglayer.interop.types.v1.FixedBytes32R\x10settlementTxHashB\x0f\n" +
	"\r_epoch_numberB\x14\n" +
	"\x12_certificate_index\"2\n" +
	"\x16CertificateStatusError\x12\x18\n" +
	"\amessage\x18\x01 \x01(\fR\amessage*\xd9\x01\n" +
	"\x11CertificateStatus\x12\"\n" +
	"\x1eCERTIFICATE_STATUS_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aCERTIFICATE_STATUS_PENDING\x10\x01\x12\x1d\n" +
	"\x19CERTIFICATE_STATUS_PROVEN\x10\x02\x12 \n" +
	"\x1cCERTIFICATE_STATUS_CANDIDATE\x10\x03\x12\x1f\n" +
	"\x1bCERTIFICATE_STATUS_IN_ERROR\x10\x04\x12\x1e\n" +
	"\x1aCERTIFICATE_STATUS_SETTLED\x10\x05b\x06proto3"

var (
	file_agglayer_node_types_v1_certificate_header_proto_rawDescOnce sync.Once
	file_agglayer_node_types_v1_certificate_header_proto_rawDescData []byte
)

func file_agglayer_node_types_v1_certificate_header_proto_rawDescGZIP() []byte {
	file_agglayer_node_types_v1_certificate_header_proto_rawDescOnce.Do(func() {
		file_agglayer_node_types_v1_certificate_header_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agglayer_node_types_v1_certificate_header_proto_rawDesc), len(file_agglayer_node_types_v1_certificate_header_proto_rawDesc)))
	})
	return file_agglayer_node_types_v1_certificate_header_proto_rawDescData
}

var file_agglayer_node_types_v1_certificate_header_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_agglayer_node_types_v1_certificate_header_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_agglayer_node_types_v1_certificate_header_proto_goTypes = []any{
	(CertificateStatus)(0),         // 0: agglayer.node.types.v1.CertificateStatus
	(*CertificateHeader)(nil),      // 1: agglayer.node.types.v1.CertificateHeader
	(*CertificateStatusError)(nil), // 2: agglayer.node.types.v1.CertificateStatusError
	(*CertificateId)(nil),          // 3: agglayer.node.types.v1.CertificateId
	(*v1.FixedBytes32)(nil),        // 4: agglayer.interop.types.v1.FixedBytes32
}
var file_agglayer_node_types_v1_certificate_header_proto_depIdxs = []int32{
	3, // 0: agglayer.node.types.v1.CertificateHeader.certificate_id:type_name -> agglayer.node.types.v1.CertificateId
	4, // 1: agglayer.node.types.v1.CertificateHeader.prev_local_exit_root:type_name -> agglayer.interop.types.v1.FixedBytes32
	4, // 2: agglayer.node.types.v1.CertificateHeader.new_local_exit_root:type_name -> agglayer.interop.types.v1.FixedBytes32
	4, // 3: agglayer.node.types.v1.CertificateHeader.metadata:type_name -> agglayer.interop.types.v1.FixedBytes32
	0, // 4: agglayer.node.types.v1.CertificateHeader.status:type_name -> agglayer.node.types.v1.CertificateStatus
	2, // 5: agglayer.node.types.v1.CertificateHeader.error:type_name -> agglayer.node.types.v1.CertificateStatusError
	4, // 6: agglayer.node.types.v1.CertificateHeader.settlement_tx_hash:type_name -> agglayer.interop.types.v1.FixedBytes32
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_agglayer_node_types_v1_certificate_header_proto_init() }
func file_agglayer_node_types_v1_certificate_header_proto_init() {
	if File_agglayer_node_types_v1_certificate_header_proto != nil {
		return
	}
	file_agglayer_node_types_v1_certificate_id_proto_init()
	file_agglayer_node_types_v1_certificate_header_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agglayer_node_types_v1_certificate_header_proto_rawDesc), len(file_agglayer_node_types_v1_certificate_header_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_agglayer_node_types_v1_certificate_header_proto_goTypes,
		DependencyIndexes: file_agglayer_node_types_v1_certificate_header_proto_depIdxs,
		EnumInfos:         file_agglayer_node_types_v1_certificate_header_proto_enumTypes,
		MessageInfos:      file_agglayer_node_types_v1_certificate_header_proto_msgTypes,
	}.Build()
	File_agglayer_node_types_v1_certificate_header_proto = out.File
	file_agglayer_node_types_v1_certificate_header_proto_goTypes = nil
	file_agglayer_node_types_v1_certificate_header_proto_depIdxs = nil
}
